<!DOCTYPE html>
<html>

<head>
    <title></title>
    <meta charset="utf-8" />
    <script type='text/javascript'>
        var socket = io.connect();
        var map, infobox;
        function GetMap() {
            function pushpinClicked(e) {
                console.log("click");
                //Make sure the infobox has metadata to display.
                //if (e.target.metadata) {
                    //Set the infobox options with the metadata of the pushpin.
                    infobox.setOptions({
                        location: e.target.getLocation(),
                        title: e.target.metadata.title,
                        description: e.target.metadata.description,
                        visible: true
                    });
                //}
            }

            socket.on('connection', (socket) => {
                console.log('a user connected');
            });
            var map = new Microsoft.Maps.Map('#myMap', {
                credentials: 'An-_4sR5YiE_J-F45PIDzBSxi6iuJApmn2FnuTGfsRbjAMtDQQiLB6LiTZ2ToNJc',
                //center: new Microsoft.Maps.Location(31.466089, 35.395859)
            });
            //Create an infobox at the center of the map but don't show it.
            infobox = new Microsoft.Maps.Infobox(map.getCenter(), {
                visible: false
            });
            infobox.setMap(map);
            socket.on('flightsIn', function (msg) {
                // remove previous update pins
                for (var i = map.entities.getLength() - 1; i >= 0; i--) {
                    var pushpin = map.entities.get(i);
                    if (pushpin instanceof Microsoft.Maps.Pushpin) {
                        map.entities.removeAt(i);
                    }
                }
                // add pins for this update - flights in
                var center = map.getCenter();
                for (var i = 0; i < msg.length; i++) {
                    var pin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(msg[i].LON, msg[i].LAT), {
                        icon: 'images/plane.png'
                    });
                    pin.metadata = {
                        title: msg[i].flight_id,
                        description: "dest: " + msg[i].dest + "\nsrc: " + msg[i].src
                    };
                    //Add a click event handler to the pushpin.
                    Microsoft.Maps.Events.addHandler(pin, 'click', pushpinClicked);
                    map.entities.push(pin);
                }
            })

            socket.on('flightsOut', function (msg) {
                // add pins for this update - flights out
                var center = map.getCenter();
                for (var i = 0; i < msg.length; i++) {
                    var pin = new Microsoft.Maps.Pushpin(new Microsoft.Maps.Location(msg[i].LON, msg[i].LAT), {
                        icon: 'images/plane.png'
                    });
                    pin.metadata = {
                        title: msg[i].flight_id,
                        description: "dest: " + msg[i].dest + "\nsrc: " + msg[i].src
                    };
                    //Add a click event handler to the pushpin.
                    Microsoft.Maps.Events.addHandler(pin, 'click', pushpinClicked);
                    map.entities.push(pin);
                }
            })
        }
    </script>
    <script type='text/javascript' src='http://www.bing.com/api/maps/mapcontrol?callback=GetMap' async defer></script>
</head>

<body>
    <div id="myMap" style="position:relative;width:800px;height:450px;"></div>
</body>

</html>